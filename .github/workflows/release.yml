name: release
on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  release:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - uses: actions/cache@v2
        id: cache-pods
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-pods-

      - name: Install dependencies
        run: pod install

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Update CFBundleShortVersionString
          run: |
            agvtool next-version
            agvtool new-marketing-version $SOURCE_TAG
          env:
            SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Build archive
        run: |
          xcodebuild archive -workspace rekey.xcworkspace -scheme rekey \
            -configuration Release -archivePath build/rekey

      - name: Export archive
        run: |
          xcodebuild -exportArchive -archivePath build/rekey.xcarchive \
            -exportPath build/dist -exportOptionsPlist ExportOptions/Release.plist

      - name: Create dmg
        run: |
          pushd build/dist && ln -s /Applications && popd
          hdiutil create rekey.dmg -volname "rekey" -srcfolder build/dist

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: true

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./rekey.dmg
          asset_name: rekey.dmg
          asset_content_type: application/x-apple-diskimage
